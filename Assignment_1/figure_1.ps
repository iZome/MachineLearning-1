%!PS-Adobe-3.0
%%Creator: cairo 1.14.8 (http://cairographics.org)
%%CreationDate: Mon Oct  9 15:23:11 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 203x152mm 576 432 0 () ()
%%BoundingBox: 0 0 576 432
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 203x152mm
%%PageBoundingBox: 0 0 576 432
576 432 cairo_set_page_size
%%EndPageSetup
q 0 0 576 432 rectclip q
1 g
0 0 576 432 rectfill
72 388.801 446.398 -345.602 re f
Q q
72 388.801 446.398 -345.602 re W n
q
72 389 447 -346 re W n
  q
0 0 1 rg
1 w
2 J
1 j
[] 0.0 d
100000 M q 1 0 0 -1 0 432 cm
72 378.223 m 76.508 368.523 l 81.02 359.141 l 85.527 350.062 l 90.035 341.281
 l 94.547 332.789 l 99.055 324.578 l 103.562 316.637 l 108.074 308.961 l
 112.582 301.543 l 117.09 294.371 l 121.602 287.445 l 126.109 280.754 l 
130.617 274.293 l 135.129 268.051 l 139.637 262.031 l 144.145 256.219 l 
148.656 250.617 l 153.164 245.211 l 157.672 240.004 l 162.184 234.984 l 
166.691 230.152 l 171.199 225.504 l 175.711 221.027 l 180.219 216.727 l 
184.727 212.59 l 189.238 208.621 l 193.746 204.812 l 198.254 201.156 l 202.762
 197.656 l 207.273 194.305 l 211.781 191.094 l 216.289 188.031 l 220.801
 185.102 l 225.309 182.309 l 229.816 179.648 l 234.328 177.113 l 238.836
 174.703 l 243.344 172.414 l 247.855 170.246 l 252.363 168.191 l 256.871
 166.246 l 261.383 164.41 l 265.891 162.68 l 270.398 161.047 l 274.91 159.516
 l 279.418 158.074 l 283.926 156.727 l 288.438 155.465 l 292.945 154.285
 l 297.453 153.184 l 301.965 152.156 l 306.473 151.199 l 310.98 150.309 
l 315.492 149.477 l 320 148.707 l 324.508 147.984 l 329.02 147.312 l 333.527
 146.68 l 338.035 146.086 l 342.547 145.523 l 347.055 144.984 l 351.562 
144.465 l 356.074 143.961 l 365.09 142.961 l 369.602 142.457 l 374.109 141.934
 l 378.617 141.395 l 383.129 140.824 l 387.637 140.215 l 392.145 139.559
 l 396.656 138.852 l 401.164 138.078 l 405.672 137.234 l 410.184 136.305
 l 414.691 135.285 l 419.199 134.164 l 423.711 132.926 l 428.219 131.562
 l 432.727 130.066 l 437.238 128.418 l 441.746 126.609 l 446.254 124.629
 l 450.762 122.461 l 455.273 120.09 l 459.781 117.508 l 464.289 114.695 
l 468.801 111.637 l 473.309 108.32 l 477.816 104.727 l 482.328 100.844 l
 486.836 96.648 l 491.344 92.129 l 495.855 87.262 l 500.363 82.035 l 504.871
 76.422 l 509.383 70.41 l 513.891 63.973 l 518.398 57.094 l S Q
  Q
Q
Q q
0 g
1 w
2 J
0 j
[] 0.0 d
100000 M q 1 0 0 -1 0 432 cm
72 388.801 m 518.398 388.801 l S Q
q 1 0 0 -1 0 432 cm
72 388.801 m 72 43.199 l S Q
0.5 w
0 J
1 j
q 1 0 0 -1 0 432 cm
72 388.801 m 72 384.801 l S Q
q 1 0 0 -1 0 432 cm
183.602 388.801 m 183.602 384.801 l S Q
q 1 0 0 -1 0 432 cm
295.199 388.801 m 295.199 384.801 l S Q
q 1 0 0 -1 0 432 cm
406.801 388.801 m 406.801 384.801 l S Q
q 1 0 0 -1 0 432 cm
518.398 388.801 m 518.398 384.801 l S Q
q 1 0 0 -1 0 432 cm
72 388.801 m 76 388.801 l S Q
q 1 0 0 -1 0 432 cm
72 339.43 m 76 339.43 l S Q
q 1 0 0 -1 0 432 cm
72 290.059 m 76 290.059 l S Q
q 1 0 0 -1 0 432 cm
72 240.688 m 76 240.688 l S Q
q 1 0 0 -1 0 432 cm
72 191.312 m 76 191.312 l S Q
q 1 0 0 -1 0 432 cm
72 141.941 m 76 141.941 l S Q
q 1 0 0 -1 0 432 cm
72 92.57 m 76 92.57 l S Q
q 1 0 0 -1 0 432 cm
72 43.199 m 76 43.199 l S Q
0 0 1 rg
1 w
2 J
q 1 0 0 -1 0 432 cm
371.742 214.312 m 398.621 214.312 l S Q
Q Q
showpage
%%Trailer
%%EOF
