%!PS-Adobe-3.0
%%Creator: cairo 1.14.8 (http://cairographics.org)
%%CreationDate: Fri Oct 27 23:53:12 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 203x152mm 576 432 0 () ()
%%BoundingBox: 0 0 576 432
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 203x152mm
%%PageBoundingBox: 0 0 576 432
576 432 cairo_set_page_size
%%EndPageSetup
q 0 0 576 432 rectclip q
1 g
0 0 576 432 rectfill
72 388.801 446.398 -345.602 re f
Q q
72 388.801 446.398 -345.602 re W n
q
72 389 447 -346 re W n
  q
0 g
1 w
2 J
1 j
[] 0.0 d
100000 M q 1 0 0 -1 0 432 cm
76.465 82.867 m 80.93 224.129 l 85.391 267.863 l 89.855 291.602 l 94.32
 307.551 l 98.785 319.41 l 103.246 328.738 l 107.711 336.324 l 112.176 342.629
 l 116.641 347.945 l 121.105 352.469 l 125.566 356.344 l 130.031 359.68 
l 134.496 362.555 l 138.961 365.031 l 143.426 367.164 l 147.887 368.992 
l 152.352 370.555 l 156.816 371.883 l 161.281 372.992 l 165.742 373.914 
l 170.207 374.66 l 174.672 375.25 l 179.137 375.695 l 183.602 376.012 l 
188.062 376.207 l 192.527 376.293 l 196.992 376.281 l 201.457 376.172 l 
205.922 375.977 l 210.383 375.703 l 214.848 375.355 l 219.312 374.938 l 
223.777 374.457 l 228.238 373.918 l 232.703 373.324 l 237.168 372.68 l 241.633
 371.984 l 246.098 371.242 l 250.559 370.461 l 255.023 369.641 l 259.488
 368.785 l 263.953 367.895 l 268.414 366.969 l 272.879 366.016 l 277.344
 365.035 l 281.809 364.027 l 286.273 362.996 l 290.734 361.941 l 295.199
 360.863 l 299.664 359.766 l 304.129 358.648 l 308.594 357.516 l 313.055
 356.367 l 317.52 355.203 l 321.984 354.023 l 326.449 352.828 l 330.91 351.625
 l 335.375 350.41 l 339.84 349.18 l 344.305 347.945 l 348.77 346.699 l 353.23
 345.441 l 357.695 344.18 l 362.16 342.91 l 366.625 341.633 l 371.09 340.352
 l 375.551 339.062 l 380.016 337.77 l 384.48 336.473 l 388.945 335.172 l
 393.406 333.867 l 402.336 331.25 l 406.801 329.938 l 411.266 328.621 l 
415.727 327.305 l 420.191 325.984 l 424.656 324.668 l 433.586 322.027 l 
438.047 320.707 l 451.441 316.746 l 455.902 315.426 l 469.297 311.477 l 
473.762 310.164 l 478.223 308.852 l 482.688 307.539 l 487.152 306.23 l 491.617
 304.926 l 496.078 303.621 l 505.008 301.02 l 509.473 299.727 l 513.938 
298.43 l 518.398 297.141 l S Q
  Q
Q
Q q
0 g
1 w
2 J
0 j
[] 0.0 d
100000 M q 1 0 0 -1 0 432 cm
72 388.801 m 72 43.199 l S Q
q 1 0 0 -1 0 432 cm
72 388.801 m 518.398 388.801 l S Q
0.5 w
0 J
1 j
q 1 0 0 -1 0 432 cm
161.281 388.801 m 161.281 384.801 l S Q
q 1 0 0 -1 0 432 cm
250.559 388.801 m 250.559 384.801 l S Q
q 1 0 0 -1 0 432 cm
339.84 388.801 m 339.84 384.801 l S Q
q 1 0 0 -1 0 432 cm
429.121 388.801 m 429.121 384.801 l S Q
q 1 0 0 -1 0 432 cm
518.398 388.801 m 518.398 384.801 l S Q
q 1 0 0 -1 0 432 cm
72 302.398 m 76 302.398 l S Q
q 1 0 0 -1 0 432 cm
72 216 m 76 216 l S Q
q 1 0 0 -1 0 432 cm
72 129.602 m 76 129.602 l S Q
q 1 0 0 -1 0 432 cm
72 43.199 m 76 43.199 l S Q
Q Q
showpage
%%Trailer
%%EOF
