%!PS-Adobe-3.0
%%Creator: cairo 1.14.8 (http://cairographics.org)
%%CreationDate: Fri Oct 27 23:57:16 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 203x152mm 576 432 0 () ()
%%BoundingBox: 0 0 576 432
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 203x152mm
%%PageBoundingBox: 0 0 576 432
576 432 cairo_set_page_size
%%EndPageSetup
q 0 0 576 432 rectclip q
1 g
0 0 576 432 rectfill
72 388.801 446.398 -345.602 re f
Q q
72 388.801 446.398 -345.602 re W n
q
72 389 447 -346 re W n
  q
0.992157 0.682353 0.380392 rg
1 w
2 J
1 j
[] 0.0 d
100000 M q 1 0 0 -1 0 432 cm
72 250.559 m 87.395 244.203 l 102.785 237.848 l 133.574 225.137 l 148.965
 218.781 l 164.359 212.426 l 179.75 206.07 l 195.145 199.715 l 210.539 193.355
 l 225.93 187 l 256.719 174.289 l 272.109 167.934 l 302.898 155.223 l 318.289
 148.867 l 333.684 142.512 l 349.074 136.156 l 364.469 129.797 l 379.863
 123.441 l 395.254 117.086 l 426.043 104.375 l 441.434 98.02 l 456.828 91.664
 l 472.219 85.309 l 503.008 72.598 l 518.398 66.238 l S Q
  Q
Q
q
72 389 447 -346 re W n
  q
0.843137 0.0980392 0.109804 rg
1 w
2 J
1 j
[] 0.0 d
100000 M q 1 0 0 -1 0 432 cm
72 365.762 m 87.395 359.402 l 102.785 353.047 l 133.574 340.336 l 148.965
 333.98 l 164.359 327.625 l 179.75 321.27 l 210.539 308.559 l 225.93 302.203
 l 241.324 295.844 l 256.719 289.488 l 272.109 283.133 l 302.898 270.422
 l 318.289 264.066 l 333.684 257.711 l 349.074 251.355 l 379.863 238.645
 l 395.254 232.285 l 426.043 219.574 l 441.434 213.219 l 456.828 206.863
 l 472.219 200.508 l 503.008 187.797 l 518.398 181.441 l S Q
  Q
Q
q
72 389 447 -346 re W n
  q
0.101961 0.588235 0.254902 rg
1 w
2 J
1 j
[] 0.0 d
100000 M q 1 0 0 -1 0 432 cm
72 308.16 m 87.395 301.805 l 102.785 295.449 l 133.574 282.738 l 148.965
 276.379 l 164.359 270.023 l 179.75 263.668 l 210.539 250.957 l 225.93 244.602
 l 256.719 231.891 l 272.109 225.535 l 287.504 219.18 l 302.898 212.82 l
 318.289 206.465 l 333.684 200.109 l 349.074 193.754 l 379.863 181.043 l
 395.254 174.688 l 426.043 161.977 l 441.434 155.621 l 456.828 149.262 l
 472.219 142.906 l 503.008 130.195 l 518.398 123.84 l S Q
  Q
Q
Q q
0 g
1 w
2 J
0 j
[] 0.0 d
100000 M q 1 0 0 -1 0 432 cm
72 388.801 m 72 43.199 l S Q
q 1 0 0 -1 0 432 cm
72 388.801 m 518.398 388.801 l S Q
0.5 w
0 J
1 j
q 1 0 0 -1 0 432 cm
72 388.801 m 72 384.801 l S Q
q 1 0 0 -1 0 432 cm
183.602 388.801 m 183.602 384.801 l S Q
q 1 0 0 -1 0 432 cm
406.801 388.801 m 406.801 384.801 l S Q
q 1 0 0 -1 0 432 cm
518.398 388.801 m 518.398 384.801 l S Q
q 1 0 0 -1 0 432 cm
72 331.199 m 76 331.199 l S Q
q 1 0 0 -1 0 432 cm
72 216 m 76 216 l S Q
q 1 0 0 -1 0 432 cm
72 100.801 m 76 100.801 l S Q
0.992157 0.682353 0.380392 rg
1 w
2 J
q 1 0 0 -1 0 432 cm
95.039 68.348 m 121.922 68.348 l S Q
0.843137 0.0980392 0.109804 rg
q 1 0 0 -1 0 432 cm
95.039 90.891 m 121.922 90.891 l S Q
0.101961 0.588235 0.254902 rg
q 1 0 0 -1 0 432 cm
95.039 113.434 m 121.922 113.434 l S Q
0 g
0.5 w
0 J
q 1 0 0 -1 0 432 cm
295.211 388.41 m 295.211 384.41 l S Q
q 1 0 0 -1 0 432 cm
73.258 43.215 m 77.258 43.215 l S Q
Q Q
showpage
%%Trailer
%%EOF
