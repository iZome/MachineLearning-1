image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
plot(x1,x2)
x1<-c(seq(1:5),seq(1:5))
x2<-c(seq(1:5)+0.2,seq(1:5)-0.2)
plot(x1,x2)
par(mar=c(2,2,2,2))
plot(x1,x2)
par(mar=c(2,2,2,2))
plot(x1,x2)
y<-c(rep(1,5),rep(-1,5))
data<-cbind(y,x1,x2)
data
ind<-data[,1]==1
plot(data[ind,2],data[ind,3],col="red",pch=19)
points(data[-ind,2],data[-ind,3],col="blue",pch=19)
ind
data[-ind,2]
seq<-1:10
ind<-seq[data[,1]==1]
plot(data[ind,2],data[ind,3],col="red",pch=19)
points(data[-ind,2],data[-ind,3],col="blue",pch=19)
plot(c(0,0),xlim=c(0,5),ylim=c(0,5.5))
points(data[ind,2],data[ind,3],col="red",pch=19)
points(data[-ind,2],data[-ind,3],col="blue",pch=19)
plot(c(0,0),xlim=c(0,5),ylim=c(0,5.5),type="n")
points(data[ind,2],data[ind,3],col="red",pch=19)
points(data[-ind,2],data[-ind,3],col="blue",pch=19)
lm(data[1,]~data[2,])
lm(data[1,]~data[3,])
x1<-(x1-mean(x1))/(sd(x1))
x1
x1<-c(seq(1:5),seq(1:5))
x1.2<-(x1-mean(x1))/(sd(x1))
x1.2
x1
x2<-(x2-mean(x2))/(sd(x2))
x1<-c(seq(1:5),seq(1:5))
x2<-c(seq(1:5)+0.2,seq(1:5)-0.2)
x1<-(x1-mean(x1))/(sd(x1))
x2<-(x2-mean(x2))/(sd(x2))
y<-c(rep(1,5),rep(-1,5))
data<-cbind(y,x1,x2)
y
data
plot(c(0,0),xlim=c(-1.5,1.5),ylim=c(-1.5,1.5),type="n")
points(data[ind,2],data[ind,3],col="red",pch=19)
points(data[-ind,2],data[-ind,3],col="blue",pch=19)
lm(data[1,]~data[2,])
lm(data[1,]~data[3,])
lm(data[,1]~data[,2])
lm(data[,1]~data[,3])
par(mar=c(3,3,3,3))
plot(c(0,0),xlim=c(-1.5,1.5),ylim=c(-1.5,1.5),type="n")
points(data[ind,2],data[ind,3],col="red",pch=19)
points(data[-ind,2],data[-ind,3],col="blue",pch=19)
plot(c(0,0),xlim=c(-1.5,1.5),ylim=c(-1.5,1.5),type="n",xlab=expression(x[1]))
points(data[ind,2],data[ind,3],col="red",pch=19)
par(mar=c(5,5,5,5))
plot(c(0,0),xlim=c(-1.5,1.5),ylim=c(-1.5,1.5),type="n",xlab=expression(x[1]))
par(mar=c(4,4,4,4))
plot(c(0,0),xlim=c(-1.5,1.5),ylim=c(-1.5,1.5),type="n",xlab=expression(x[1]))
plot(c(0,0),xlim=c(-1.5,1.5),ylim=c(-1.5,1.5),type="n",xlab=expression(x[1]),ylab=expression(x[2]))
points(data[ind,2],data[ind,3],col="red",pch=19)
points(data[-ind,2],data[-ind,3],col="blue",pch=19)
plot(c(0,0),xlim=c(-1.5,1.5),ylim=c(-1.5,1.5),type="n",xlab=expression(x[1]),ylab=expression(x[2]),main="Two classes of points")
points(data[ind,2],data[ind,3],col="red",pch=19)
points(data[-ind,2],data[-ind,3],col="blue",pch=19)
prcomp(data[,2:3])$rotation[1]
prcomp(data[,2:3])$rotation
prcomp(data[,2:3])$rotation[,1]
lines(seq(-1.5,1.5,0.01),seq(-1.5,1.5,0.01))
plot(c(0,0),xlim=c(-1.5,1.5),ylim=c(-1.5,1.5),type="n",xlab=expression(x[1]),ylab=expression(x[2]),main="Two classes of objects")
points(data[ind,2],data[ind,3],col="red",pch=19)
points(data[-ind,2],data[-ind,3],col="blue",pch=19)
lines(seq(-1.5,1.5,0.01),seq(-1.5,1.5,0.01))
n
n=168
image(img.up[n,,],col = grey(seq(0, 1, length = 256)))
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)))
image(img.up[n,,],col = grey(seq(0, 1, length = 256)))
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)))
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)))
image(img.mean,col = grey(seq(0, 1, length = 256)))
image(img.sd,col = grey(seq(0, 1, length = 256)))
X<-matrix(NA,nrow=N,ncol=(W*H))
for(i in 1:N){
vec.pic<-img.scale[i,1,]
for(j in 2:W){
vec.pic<-cbind(vec.pic,img.scale[i,j,])
}
X[i,]<-vec.pic
}
A<-X%*%t(X) #covariance matrix, C<-t(X)%*%X
store<-prcomp(A)
img.eig<-t(X)%*%store$rotation
EigenfaceImage=function(EigenfaceVec,W,H){
Eigenface<-matrix(NA,ncol=H,nrow=W)
for(i in 1:W){
Eigenface[i,]<-EigenfaceVec[((H*(i-1))+1):(H*i)]
}
return(Eigenface)
}
i=1
eig<-EigenfaceImage(img.eig[,i],W,H)
image(eig,col = grey(seq(0, 1, length = 256)))
par(mfrow=c(1,10))
for(i in 1:10){
eig<-EigenfaceImage(img.eig[,i],W,H)
image(eig,col = grey(seq(0, 1, length = 256)))
}
par(mfrow=c(1,1))
par(mfrow=c(1,10))
par(mar=c(0.1,0.1,0.1,0.1))
for(i in 1:10){
eig<-EigenfaceImage(img.eig[,i],W,H)
image(eig,col = grey(seq(0, 1, length = 256)))
}
par(mfrow=c(1,10))
par(mar=c(0.1,0.1,0.1,0.1))
for(i in 1:10){
eig<-EigenfaceImage(img.eig[,i],W,H)
image(eig,col = grey(seq(0, 1, length = 256)),axes=FALSE)
}
#Given an input picture, it converts it to a lower dimensional input
CompressImage=function(img,eigenvector,R){
b<-rep(NA,R)
H<-dim(img)[2]
W<-dim(img)[1]
vec.pic<-img[1,]
for(i in 2:W){
vec.pic<-c(vec.pic,img[i,])
}
for(i in 1:R){
b[i]<-crossprod(vec.pic,eigenvector[,i])
}
#print(b)
#print(eigenvector[1:10,1])
#print(b[1]*eigenvector[1:10,1])
compress.img<-rep(0,(H*W))
for(i in 1:R){
compress.img<-compress.img+(b[i]*eigenvector[,i])
}
recreate<-EigenfaceImage(compress.img,W,H)
return(recreate)
}
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,10))
par(mar=c(0.1,0.2,0.2,0.1))
inds<-sample(1:N,10)
image(img.eig[inds[1],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
image(img.scale[inds[2],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
image(img.scale[inds[3],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
image(img.scale[inds[4],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
image(img.scale[inds[5],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
image(img.scale[inds[6],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
image(img.scale[inds[7],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
image(img.scale[inds[8],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
image(img.scale[inds[9],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
image(img.scale[inds[10],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mar=c(2,2,2,2))
par(mfrow=c(1,10))
par(mar=c(0.1,0.2,0.2,0.1))
inds<-sample(1:N,10)
image(img.scale[inds[1],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
image(img.scale[inds[2],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
image(img.scale[inds[3],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
image(img.scale[inds[4],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
image(img.scale[inds[5],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
image(img.scale[inds[6],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
image(img.scale[inds[7],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
image(img.scale[inds[8],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
image(img.scale[inds[9],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
image(img.scale[inds[10],,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mar=c(2,2,2,2))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mar=c(0.1,0.2,0.2,0.1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
n
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
n<-sample(1:N,1)
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-400
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
par(mfrow=c(1,1))
n
par(mfrow=c(1,4))
image(img.scale[n,,],col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-5
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-50
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
K<-200
recreate=CompressImage(img.scale[n,,],img.eig,K)
image(recreate,col = grey(seq(0, 1, length = 256)),axes=FALSE)
y <- AirPassengers[1:20]
x <- 1:20
lm (y ~ x)
plot (x, y)
par(mfrow=c(1,1))
plot (x, y)
par(mar=c(4,4,4,4))
lm (y ~ x)
plot (x, y)
lines (x, fitted(lm(y~x)))
par(mar=c(4,4,2,2))
plot (x, y)
lines (x, fitted(lm(y~x)))
x <- scale(x, center=T, scale=F)
y <- scale(y, center=T, scale=F)
plot (x, y)
h1.2 <- function(x) { x }
lm(y ~ -1 + h1.2(x))
lm(y ~ h1.2(x))
length(AirPassengers)
fit.basis.model <- function (x,y, h.list="h1.2") {  M <- length(h.list)  model.text <- paste("lm(y ~ -1 +", paste(h.list[[1]],"(x)"))  for (m in 2:M)    model.text <- paste (paste(model.text,"+"),paste(h.list[[m]],"(x)"))  model.text <- paste (model.text, ")")  print(model.text)  eval(parse(text=model.text))}
fit.basis.model <- function (x,y, h.list="h1.2") {  M <- length(h.list)  model.text <- paste("lm(y ~ -1 +", paste(h.list[[1]],"(x)"))  for (m in 2:M)    model.text <- paste(paste(model.text,"+"),paste(h.list[[m]],"(x)"))  model.text <- paste(model.text, ")")  print(model.text)  eval(parse(text=model.text))}
fit.basis.model<-function(x,y, h.list="h1.2"){  M<-length(h.list)  model.text<-paste("lm(y ~ -1 +",paste(h.list[[1]],"(x)"))  for(m in 2:M){    model.text<-paste(paste(model.text,"+"),paste(h.list[[m]],"(x)"))  }  model.text<-paste(model.text,")")  print(model.text)  eval(parse(text=model.text))}
fit.basis.model<-function(x,y, h.list="h1.2"){  M<-length(h.list)  model.text<-paste("lm(y ~ -1 +",paste(h.list[[1]],"(x)"))  for(m in 2:M){    model.text<-paste(paste(model.text,"+"),paste(h.list[[m]],"(x)"))  }  model.text<-paste(model.text,")")  print(model.text)#  eval(parse(text=model.text))}
fit.basis.model<-function(x,y,h.list="h1.2"){  M<-length(h.list)  model.text<-paste("lm(y ~ -1 +",paste(h.list[[1]],"(x)"))  for(m in 2:M){    model.text<-paste(paste(model.text,"+"),paste(h.list[[m]],"(x)"))  }  model.text<-paste(model.text,")")  print(model.text)  eval(parse(text=model.text))}
fit.basis.model<-function(x,y,h.list="h1.2"){  M<-length(h.list)  model.text<-paste("lm(y ~ -1 +",paste(h.list[[1]],"(x)"))  for(m in 2:M){    model.text<-paste(paste(model.text,"+"),paste(h.list[[m]],"(x)"))  }  model.text<-paste(model.text,")")  print(model.text)  #eval(parse(text=model.text))}
fit.basis.model=function(x,y,h.list="h1.2"){  M<-length(h.list)  model.text<-paste("lm(y ~ -1 +",paste(h.list[[1]],"(x)"))  for(m in 2:M){    model.text<-paste(paste(model.text,"+"),paste(h.list[[m]],"(x)"))  }  model.text<-paste(model.text,")")  print(model.text)  #eval(parse(text=model.text))}
fit.basis.model=function(x,y,h.list="h1.2"){  M<-length(h.list)}
lm(y ~ -1 + h1.2(x))
fit.basis.model=function(x,y,h.list="h1.2"){  M<-length(h.list)}
fit.basis.model=function(x,y,h.list="h1.2"){
M<-length(h.list)
}
fit.basis.model=function(x,y,h.list="h1.2"){  model.text<-paste("lm(y ~ -1 +",paste(h.list[[1]],"(x)"))  for(m in 2:M){    model.text<-paste(paste(model.text,"+"),paste(h.list[[m]],"(x)"))  }  model.text<-paste(model.text,")")  print(model.text)  #eval(parse(text=model.text))  M<-length(h.list)}
fit.basis.model=function(x,y,h.list="h1.2"){
model.text<-paste("lm(y ~ -1 +",paste(h.list[[1]],"(x)"))
for(m in 2:M){    model.text<-paste(paste(model.text,"+"),paste(h.list[[m]],"(x)"))  }
fit.basis.model=function(x,y,h.list="h1.2"){
model.text<-paste("lm(y ~ -1 +",paste(h.list[[1]],"(x)"))
for(m in 2:M){
model.text<-paste(paste(model.text,"+"),paste(h.list[[m]],"(x)"))
}
model.text<-paste(model.text,")")
print(model.text)
M<-length(h.list)
}
fit.basis.model(x,y,h.list="h1.2")
fit.basis.model=function(x,y,h.list="h1.2"){  M<-length(h.list)}
fit.basis.model=function(x,y,h.list="h1.2"){  M<-length(h.list)}
aaa
fit.basis.model=function(x,y,h.list="h1.2"){  M<-length(h.list)}
h1.2 <- function(x) { x }lm(y ~ -1 + h1.2(x))
h1.2 <- function(x) { x }
x <- scale(x, center=T, scale=F)y <- scale(y, center=T, scale=F)plot (x, y)
x <- scale(x, center=T, scale=F)y <- scale(y, center=T, scale=F)plot (x, y)
lm (y ~ x)plot (x, y)lines (x, fitted(lm(y~x)))
par(mfrow=c(1,1))par(mar=c(4,4,2,2))y <- AirPassengers[1:20]x <- 1:20
par(mfrow=c(1,1))par(mar=c(4,4,2,2))
clear()
par(mfrow=c(1,1))par(mar=c(4,4,2,2))y <- AirPassengers[1:20]x <- 1:20
par(mfrow=c(1,1))par(mar=c(4,4,2,2))y <- AirPassengers[1:20]x <- 1:20
par(mfrow=c(1,1))par(mar=c(4,4,2,2))y <- AirPassengers[1:20]x <- 1:20
par(mfrow=c(1,1))par(mar=c(4,4,2,2))y <- AirPassengers[1:20]x <- 1:20
par(mfrow=c(1,1))par(mar=c(4,4,2,2))y <- AirPassengers[1:20]x <- 1:20
par(mfrow=c(1,1))par(mar=c(4,4,2,2))y <- AirPassengers[1:20]x <- 1:20
par(mfrow=c(1,1))par(mar=c(4,4,2,2))y <- AirPassengers[1:20]x <- 1:20
par(mfrow=c(1,1))par(mar=c(4,4,2,2))y <- AirPassengers[1:20]x <- 1:20
par(mfrow=c(1,1))par(mar=c(4,4,2,2))y <- AirPassengers[1:20]x <- 1:20
par(mfrow=c(1,1))par(mar=c(4,4,2,2))y <- AirPassengers[1:20]x <- 1:20
par(mfrow=c(1,1))par(mar=c(4,4,2,2))y <- AirPassengers[1:20]x <- 1:20
par(mfrow=c(1,1))par(mar=c(4,4,2,2))y <- AirPassengers[1:20]x <- 1:20
fit.basis.model=function(x,y,h.list="h1.2"){
M<-length(h.list)
model.text<-paste("lm(y ~ -1 +",paste(h.list[[1]],"(x)"))
for(m in 2:M){
model.text<-paste(paste(model.text,"+"),paste(h.list[[m]],"(x)"))
}
model.text<-paste(model.text,")")
print(model.text)
eval(parse(text=model.text))
}
h1.3 <- function(x) { x }
h1.3 <- function(x) { x }h2.3 <- function(x) { x^2 }h3.3 <- function(x) { x^3 }
